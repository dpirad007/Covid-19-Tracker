{"version":3,"sources":["components/StatePicker/StatePicker.module.css","components/StateChart/StateChart.module.css","components/StateCards/StateCards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Navbar/Navbar.jsx","components/StatePicker/StatePicker.jsx","components/StateCards/StateCards.jsx","components/StateChart/StateChart.jsx","pages/maha.jsx","pages/home.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","maha","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchcountries","countries","name","fetchMahaData","response","fetchedStateData","Maharashtra","districtData","Object","keys","fetchDistData","dist","sol","active","deceased","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Navbar","AppBar","position","Toolbar","Button","Link","to","StatePicker","handleStateChange","fetchedState","setfetchedState","fetchStateAPI","StateCards","StateChart","state","doughnutChart","state1","setState","this","Component","home","fetchedData","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a4a9959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"StatePicker_formControl__3JtLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StateChart_container__1mGBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StateCards_container__2HBqd\",\"card\":\"StateCards_card__hDmVl\",\"infected\":\"StateCards_infected__3-WUl\",\"recovered\":\"StateCards_recovered__3p1HS\",\"deaths\":\"StateCards_deaths__teFyq\",\"confirmed\":\"StateCards_confirmed__2kh2r\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n    if(!confirmed) {\r\n        return 'Loading...'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        <CountUp  start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of active cases</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        <CountUp  start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        <CountUp  start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deaths</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\nconst maha = 'https://api.covid19india.org/state_district_wise.json';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try{\r\n       const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n\r\n\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchcountries = async () => {\r\n    try{\r\n        const { data : { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n        \r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchMahaData = async () => {\r\n    try{\r\n        const response = await axios.get(maha);\r\n\r\n        const fetchedStateData = response.data.Maharashtra.districtData;\r\n\r\n        return Object.keys(fetchedStateData);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDistData = async(dist) => {\r\n    try{\r\n\r\n        const response = await axios.get(maha);\r\n\r\n        const sol = dist;\r\n\r\n        const { active, confirmed, deceased, recovered } = response.data.Maharashtra.districtData[sol];\r\n\r\n        //return test;\r\n         return { active, confirmed, deceased, recovered };\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api/index';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data, country}) => {\r\n\r\n    const  [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());//to set the daily data(see video fro better usdersatnding)\r\n        } \r\n\r\n        fetchApi();\r\n    },[])\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (<Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) \r\n        : null\r\n    );\r\n\r\n    const barChart = (\r\n        data.confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected','Recovered','Deadths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current State in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country? barChart: lineChart}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Chart;","import React ,{ useState, useEffect }from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchcountries } from '../../api/index';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries,setfetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setfetchedCountries(await fetchcountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setfetchedCountries]);\r\n\r\n    //console.log(fetchedCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country,i) => {\r\n                    return <option key={i} value={country}>{country}</option>\r\n                })}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <Typography variant=\"h6\">\r\n                COVID-Tracker\r\n            </Typography>\r\n            <Button color=\"inherit\" component={Link} to=\"/global\">Global</Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/maharastra\">Maharastra</Button>\r\n        </Toolbar>\r\n        </AppBar>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React ,{ useState, useEffect }from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './StatePicker.module.css';\r\n\r\nimport { fetchMahaData } from '../../api/index';\r\n\r\nconst StatePicker = ({ handleStateChange }) => {\r\n\r\n    const [fetchedState, setfetchedState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchStateAPI = async() => {\r\n            setfetchedState(await fetchMahaData());\r\n        }\r\n\r\n        fetchStateAPI();\r\n    },[setfetchedState]);\r\n\r\n    //console.log(fetchedState)\r\n\r\n    return (\r\n        <div>\r\n        <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleStateChange(e.target.value)}>\r\n            {fetchedState.map((country,i) => {\r\n                return <option key={i} value={country}>{country}</option>\r\n            })}\r\n        </NativeSelect>\r\n        </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatePicker;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './StateCards.module.css';\r\n\r\nconst StateCards = ({data}) => {\r\n\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.confirmed)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Confirmed</Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        <CountUp  start={0} end={data.confirmed} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of Confirmed cases</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        <CountUp  start={0} end={data.active} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of active cases</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        <CountUp  start={0} end={data.recovered} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        <CountUp  start={0} end={data.deceased} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of deaths</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StateCards;","import React from 'react';\r\n\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nimport styles from './StateChart.module.css';\r\n\r\nconst StateChart = ({data, state}) => {\r\n\r\n    const doughnutChart = (\r\n        <Doughnut \r\n            data={{\r\n                labels: ['Confirmed','Active','Recovered','Deadths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(150,0,150,0.5)','rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                    data: [data.confirmed, data.active, data.recovered, data.deceased]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current State in ${state}`}\r\n            }}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {doughnutChart}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default StateChart;","import React, { Component } from 'react';\r\nimport {  StatePicker, StateCards, StateChart } from '../components';\r\n\r\nimport styles from '../App.module.css';\r\n\r\nimport { fetchMahaData, fetchDistData } from '../api/index';\r\n\r\n\r\nclass maha extends Component {\r\n\r\n    state = {\r\n        data: {\r\n            active: 52,\r\n            confirmed: 226,\r\n            deceased: 9,\r\n            recovered: 165,\r\n        },\r\n        state1: 'Ahmednagar',\r\n    }\r\n    \r\n    // async componentDidMount () {\r\n    //     const fetchedStateData = await fetchDistData('Thane');\r\n\r\n    //     console.log(fetchedStateData);\r\n    // }\r\n\r\n    handleStateChange = async (state) => {\r\n        const fetchedStateData = await fetchDistData(state);\r\n\r\n        //console.log(fetchedStateData);\r\n\r\n        this.setState({data: fetchedStateData, state1: state});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <StateCards data={this.state.data}/>\r\n                <StatePicker handleStateChange={this.handleStateChange}/>\r\n                <StateChart data={this.state.data} state={this.state.state1}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default maha;\r\n","import React, { Component } from 'react';\r\n\r\nimport styles from '../App.module.css';\r\n\r\nimport {  Cards, Chart, CountryPicker } from '../components';\r\nimport { fetchData } from '../api/index';\r\n\r\nclass home extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        if(country==='global') {\r\n            \r\n            const fetchedData = await fetchData();\r\n            this.setState({data: fetchedData, country: ''});\r\n        }\r\n        else{\r\n            const fetchedData = await fetchData(country);\r\n            \r\n            this.setState({data: fetchedData, country: country});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default home;\r\n","import React, { Component }  from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport {  Navbar } from './components';\r\n\r\n\r\nimport  maha  from './pages/maha';\r\nimport home from './pages/home';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n            <Router>\r\n            <Navbar />\r\n                <Switch>\r\n                    <Route path=\"/global\" component={home} />\r\n                    <Route path=\"/maharastra\" component={maha}/>\r\n                </Switch>\r\n            </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1EFt0\",\"card\":\"Cards_card__2PK3D\",\"infected\":\"Cards_infected__20g92\",\"recovered\":\"Cards_recovered__298P0\",\"deaths\":\"Cards_deaths__bKmwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3C0Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__27SIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3jxlZ\"};"],"sourceRoot":""}